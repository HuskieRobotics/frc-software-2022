// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


// import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.commands.ExtendClimberToHeightCommand;
import frc.robot.Constants.SecondMechanismConstants;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PneumaticsModuleType;
import edu.wpi.first.wpilibj.Solenoid;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.networktables.NetworkTableEntry;
// import static frc.robot.Constants.ElevatorConstants;

import java.util.Map;

import static frc.robot.Constants.*;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj2.command.InstantCommand;
import edu.wpi.first.wpilibj2.command.Subsystem;

/**
 *
 */
public class SecondMechanism extends SubsystemBase {
    private boolean isPullPosition;

    private NetworkTableEntry isPullPositionNT;
    private NetworkTableEntry  pullPushNT;
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Solenoid secondaryMechanism;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    //pull = solenoid on
    //push = solenoid off
    /**
    *
    */
    public SecondMechanism() {
        this.isPullPosition = false;

        this.isPullPositionNT = Shuffleboard.getTab("Second Mechanism")
        .add("isPullPosition", false)
        .getEntry();

        this.pullPushNT = Shuffleboard.getTab("Second Mechanism")
            .add("Push/Pull Pistons", false)
            .withWidget(BuiltInWidgets.kToggleButton)
            .getEntry();
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        secondaryMechanism = new Solenoid(SecondMechanismConstants.PNEUMATIC_HUB_CAN_ID, PneumaticsModuleType.REVPH, 1);
         addChild("Secondary Mechanism", secondaryMechanism);
 


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        this.isPullPositionNT.setBoolean(getisPullPosition());
        if (TUNING)
        {
            boolean pushPull = this.pullPushNT.getBoolean(false);
            if(pushPull){
                pushSecondMechansim();
            }
            else {
                pullSecondMechansim();
            }
        }
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public boolean getisPullPosition(){
        return isPullPosition;
    }
    public void pullSecondMechansim() { 
        this.secondaryMechanism.set(true);
        this.isPullPosition = true;
    }
    public void pushSecondMechansim() { 
        this.secondaryMechanism.set(false);
        this.isPullPosition = false;
    }
    
}

