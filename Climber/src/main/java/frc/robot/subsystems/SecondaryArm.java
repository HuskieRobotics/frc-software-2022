// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


// import frc.robot.commands.*;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants.SecondMechanismConstants;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.PneumaticsModuleType;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj2.command.InstantCommand;

/**
 *
 */
public class SecondaryArm extends SubsystemBase {
    private boolean isIn;
    private Solenoid secondaryMechanism;

    public SecondaryArm() {
        this.isIn = false;

        secondaryMechanism = new Solenoid(SecondMechanismConstants.PNEUMATIC_HUB_CAN_ID, PneumaticsModuleType.REVPH, SecondMechanismConstants.PNEUMATIC_HUB_CAN_ID);
         addChild("Secondary Mechanism", this.secondaryMechanism);
 

         Shuffleboard.getTab("Secondary Arm").add("Second Arm Out", new InstantCommand(this :: moveSecondaryArmOut));
         Shuffleboard.getTab("Secondary Arm").add("Second Arm In", new InstantCommand(this :: moveSecondaryArmIn));
         Shuffleboard.getTab("Secondary Arm").addBoolean("Second Arm In?", this :: isIn);
    }

    @Override
    public void periodic() {
       
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public boolean isIn(){
        return this.isIn;
    }
    public void moveSecondaryArmIn() { 
        this.secondaryMechanism.set(true);
        this.isIn = true;
    }
    public void moveSecondaryArmOut() { 
        this.secondaryMechanism.set(false);
        this.isIn = false;
    }
    
}

